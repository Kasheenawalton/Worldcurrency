{"ast":null,"code":"import _classCallCheck from \"/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button/Button.js';\nimport Nav from './components/Nav/Nav.js';\nimport avatar from \"./components/ChatArea/placeholder.svg\";\nimport starEmpty from \"./components/ChatArea/star_empty.svg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      channels: ['parking-lot', 'random', 'jokes'],\n      selectedChannel: 'parking-lot',\n      messages: ['Hi how are you', 'how are you', 'pls respond', 'pls'],\n      message: ''\n    };\n\n    _this.onChangeMessage = function (ev) {\n      _this.setState({\n        message: ev.target.value\n      });\n    };\n\n    _this.sendMessage = function () {\n      var messages = _this.state.messages.slice(); // duplicate messags\n\n\n      messages.push(_this.state.message); // push to messages\n\n      _this.setState({\n        // set the state with new array\n        message: '',\n        messages: messages\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ChannelSelector\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ChannelSelector-channelHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"All Channels\"), this.state.channels.map(function (channelName, index) {\n        return _this2.state.selectedChannel === channelName ? React.createElement(\"div\", {\n          key: index,\n          className: \"ChannelSelector-channel ChannelSelector-channel--selected\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"# \", channelName) : React.createElement(\"div\", {\n          key: index,\n          className: \"ChannelSelector-channel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"# \", channelName);\n      })), React.createElement(\"div\", {\n        className: \"ChatArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.messages.map(function (text, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"ChatArea-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ChatArea-avatar\",\n          src: avatar,\n          alt: \"avatar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"ChatArea-messageText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, text)), React.createElement(\"img\", {\n          className: \"ChatArea-star\",\n          src: starEmpty,\n          alt: \"avatar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      })), React.createElement(\"div\", {\n        className: \"NewMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.message,\n        onChange: this.onChangeMessage,\n        placeholder: \"Type your message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/kasheenawalton/Downloads/kickstart_frontend/4.2-dataflow/activities/1_sleck_components/src/App.js"],"names":["React","Component","Button","Nav","App","state","channels","selectedChannel","messages","message","onChangeMessage","ev","setState","target","value","sendMessage","slice","push","map","channelName","index","text","avatar","starEmpty"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Button from './components/Button/Button.js';\n\nimport Nav from './components/Nav/Nav.js';\n\nimport avatar from './components/ChatArea/placeholder.svg';\nimport starEmpty from './components/ChatArea/star_empty.svg';\n\nclass App extends Component {\n  state = {\n    channels: [\n      'parking-lot',\n      'random',\n      'jokes',\n    ],\n    selectedChannel: 'parking-lot',\n    messages: [\n      'Hi how are you',\n      'how are you',\n      'pls respond',\n      'pls',\n    ],\n\n    message: '',\n  }\n\n  onChangeMessage = (ev) => {\n    this.setState({\n      message: ev.target.value,\n    });\n  }\n\n  sendMessage = () => {\n    const messages = this.state.messages.slice(); // duplicate messags\n    messages.push(this.state.message); // push to messages\n    this.setState({ // set the state with new array\n      message: '',\n      messages: messages\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n\n        <div className=\"ChannelSelector\">\n          <div className=\"ChannelSelector-channelHeader\">All Channels</div>\n          {\n            this.state.channels.map((channelName, index) => (\n              this.state.selectedChannel === channelName ? (\n                <div key={index} className=\"ChannelSelector-channel ChannelSelector-channel--selected\"># {channelName}</div>\n              ) : (\n                <div key={index} className=\"ChannelSelector-channel\"># {channelName}</div>\n              )\n            ))\n          }\n        </div>\n\n        <div className=\"ChatArea\">\n          {\n            this.state.messages.map((text, index) => (\n              <div key={index} className=\"ChatArea-message\">\n                <img className=\"ChatArea-avatar\" src={avatar} alt=\"avatar\" />\n                <div className=\"ChatArea-messageText\">\n                  <p>{text}</p>\n                </div>\n                <img className=\"ChatArea-star\" src={starEmpty} alt=\"avatar\" />\n              </div>\n            ))\n          }\n        </div>\n\n        <div className=\"NewMessage\">\n          <input value={this.state.message} onChange={this.onChangeMessage} placeholder=\"Type your message\" />\n          <Button onClick={this.sendMessage}>Send</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}